import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
class Node{
    int data;
    Node left;
    Node right;
    public Node(int x)
        {
        data = x;
        left = null;
        right = null;
    }
    
}
public class Solution {
    static Node root;
  
        public static void print(Node root)
        {
            if(root == null)
                return;
            boolean f = true;
            Queue<Node> q = new LinkedList<Node>();
            q.add(root);
            while(!q.isEmpty()){
                int s = q.size();
                int c = s;
                while(s != 0)
                    {
                    s--;
                    Node n = q.poll();
                    if(n.left != null)
                        q.add(n.left);
                    if(n.right != null)
                        q.add(n.right);
                    
                    if(c - s == 1 && !f)
                        System.out.print(n.data+" ");
                    if(f && s == 0)
                       System.out.print(n.data+" ");
                }
                f = !f;
                }
            }
        
    

   
    
    
    
    
    
    
    public static void main(String[] args) {
        root = new Node(1);
        
        root.left = new Node(2);
    root.right = new Node(3);
 
    root.left.left  = new Node(4);
    root.left.right = new Node(5);
    root.right.right = new Node(7);
 
    root.left.left.left  = new Node(8);
    root.left.left.right  = new Node(9);
    root.left.right.left  = new Node(10);
    root.left.right.right  = new Node(11);
    root.right.right.left  = new Node(14);
    root.right.right.right  = new Node(15);
 
    root.left.left.left.left  = new Node(16);
    root.left.left.left.right  = new Node(17);
    root.right.right.right.right  = new Node(31);
        
        print(root);
        
        
        }
    }


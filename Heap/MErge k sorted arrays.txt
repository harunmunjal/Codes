import java.io.*;
import java.util.*;

class PQNode {
    int value, index;
    
     PQNode(int v,int i) {
        value = v;
        index = i;
    }
}
class PQ implements Comparator<PQNode> {
    public int compare(PQNode one, PQNode two) {
        return one.value - two.value;
    }
}
public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n, k;
         k = in.nextInt();
        n = in.nextInt();
       
        PQ pqs = new PQ();
        
        Map<Integer, ArrayList<Integer>> map = new LinkedHashMap<Integer, ArrayList<Integer>>();
        ArrayList<Integer> output = new ArrayList<Integer>();
        PriorityQueue<PQNode> p = new PriorityQueue<PQNode>(k, pqs);
        
        for(int i = 0; i < k; i++) {
            map.put(i, new ArrayList<Integer>());
            for(int j = 0; j < n; j++) 
                map.get(i).add(in.nextInt());
            
        } 
        
        for(int i = 0; i < k; i++) {
            if(map.get(i).size() == 0) 
                p.add(new PQNode(Integer.MAX_VALUE, -1));
            else
                p.add(new PQNode(map.get(i).remove(0), i));
        }
        
     
           while(output.size() != n * k) {
            PQNode t = p.poll();
            output.add(t.value);
            if(map.get(t.index).size() != 0)
                     p.add(new PQNode(map.get(t.index).remove(0), t.index));
            else
                p.add(new PQNode(Integer.MAX_VALUE, -1));
           
           
                
        }
        for(Integer i: output) {
            System.out.print(i+" ");
        }
                
            
            
        
    }
}

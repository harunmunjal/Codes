import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Graph {
    private int v;
    private LinkedList<Integer>[] adj;
    public Graph(int V) {
        v = V;
        adj = new LinkedList[V];
        for(int i = 0 ; i < v; i++ ) {
            adj[i] = new LinkedList();
        }
    }
    void addEdge(int v, int w) {
        adj[v].add(w);
    }
    void dfs(int s, boolean m[],int a[], int c) {
        m[s] = true;
        a[s] = c++;
        Iterator<Integer> it = adj[s].listIterator();
        while(it.hasNext()) {
            int n = it.next();
            if(!m[n]) {
               
                dfs(n,m,a,c);
            }              
            
                
        }
        m[s] = false;
        
    }
    void mp(int x, int y) {
         int[] a = new int[v];
         int[] b = new int[v];
         boolean m[] = new boolean[v];
        int c = 1;
         
         dfs(x,m,a,c);
        c = 1;        
         dfs(y,m,b,c);
        int res = 0xffffff;
        int pos = -1;
      
        for(int i = 0; i < v; i++) {
            if(a[i] != 0 && b[i] != 0) 
            {
                if( a[i] + b[i] < res)
                    {
                    res = a[i] + b[i];
                    pos = i;
                }
                else if(a[i] + b[i] < res)
                    {
                    res = a[i] + b[i] ;
                    pos = i;
                    
                }
                    
                    
            }            
        }
        System.out.println(pos);
     }
    public static void main(String[] args) {
        Graph g = new Graph(12);
        g.addEdge(2, 1);
        g.addEdge(1, 4);
        g.addEdge(4, 11);
        g.addEdge(11, 10);
        g.addEdge(10, 9);
        g.addEdge(9, 8);
        g.addEdge(8, 0);
        g.addEdge(0, 3);
        g.addEdge(3, 4);
        g.addEdge(5, 8);
        g.addEdge(7, 8);
        g.addEdge(6, 8);
        g.mp(2, 7);
    }
}

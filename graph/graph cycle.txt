import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Graph {
    private int V;
    private LinkedList<Integer>[] adj;
    public Graph(int v) {
        V = v;
        adj = new LinkedList[v];
        for(int i = 0; i <  V; i++) {
            adj[i] = new LinkedList();
            
        }
    }
    void addEdge(int v, int w) {
        adj[v].add(w);
        adj[w].add(v);
    }
    boolean hasdfs(int i, boolean vi[], int p) {
        vi[i] = true;
        System.out.println(i);
        Iterator<Integer> k = adj[i].listIterator();
        int n;
        while(k.hasNext()) {
             n = k.next();
            
            if(!vi[n]) {
                if(hasdfs(n, vi, i))
                return true;
            }
            
            else if(n != p)
                return true;
        }
        
        return false;
        
    }
    
    
    boolean dfs() {
        boolean[] vi = new boolean[V];
               
        for(int i = 0; i < V; i++) {
            if(!vi[i])
                if(hasdfs(i, vi, -1))
                return true;
        }
        return false;
    }

    public static void main(String[] args) {
        Graph g1 = new Graph(5);
		g1.addEdge(1, 0);
		
		g1.addEdge(2, 1);
		g1.addEdge(0, 3);
		g1.addEdge(3, 4);
        if(g1.dfs())
            System.out.println("Yes");
        else
            System.out.println("NO");
            
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}